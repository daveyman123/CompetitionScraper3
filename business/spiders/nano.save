dow.scrollTo(0, 5555);")
                time.sleep(2)
                driver.execute_script("window.scrollTo(0, 6666);")
                time.sleep(5)
                html = driver.page_source
                soup = BeautifulSoup(html, 'html.parser')
                sizeTagz = soup.findAll('span',{"class":"sss-unit-size"})
                        #sizeTagz2 = soup2.findAll('span',{"class":"sss-unit-size"})

                            # Wait to load page
                            #time.sleep(SCROLL_PAUSE_TIME)
                            #print "loooping"
                            # Calculate new scroll height and compare with last scroll height
                            #new_height = driver.execute_script("return document.body.scrollHeight")
                            #if new_height == last_height:
                             #   break
                            #print "loooping"
                            #last_height = new_height
                            #print "loooping"

                rateTagz = soup.findAll('p',{"class":"price unit-price"})


                specialTagz = soup.findAll('span',{"class":"unit-special-offer"})
                typesTagz = soup.findAll('div',{"class":"unit-info"},)

                #rateTagz2 = soup2.findAll('p',{"class":"unit-special-offer"})


                #specialTagz2 = soup2.findAll('span',{"class":"unit-special-offer"})
                #typesTagz2 = soup2.findAll('div',{"class":"unit-info"},)
                yield {'date': datetime.datetime.now().strftime("%m-%d"),
                'name': "AStorageInnLemay"
                   }
                size = []
                for n in range(len(sizeTagz)):
                    print rateTagz
                    Special = (specialTagz[n]).get_text()

                    if "Outside" in (typesTagz[n]).get_text():
                        if (sizeTagz[n]).get_text() in outside_units:
                                if (sizeTagz[n]).get_text() not in size and Special != "":
                                    size.append((sizeTagz[n]).get_text())
                                    yield {"special": Special, "rate": re.findall('\d+\.\d+',(rateTagz[n]).get_text$
'size': ((sizeTagz[n]).get_text()),
"types": "Outside"

                        }
                        driver.close()

