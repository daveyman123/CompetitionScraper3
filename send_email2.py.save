#!/usr/bin/python
import subprocess
import smtplib,ssl
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email.mime.text import MIMEText
from email.utils import formatdate
from email import encoders
import datetime
import time


def sendmail():
	subprocess.call(["sudo scrapy crawl AStorageInnDoug22"],shell = True)
	#time.sleep(10)
	subprocess.call(["sudo scrapy crawl PublicStorageDoug2"],shell = True)
	#time.sleep(10)
	subprocess.call(["sudo scrapy crawl LifeStorageDoug2"],shell = True)
	#time.sleep(10)
Z	subprocess.call(["sudo scrapy crawl LifeStorageDoug2"],shell = True)
        #time.sleep(10)

        subprocess.call(["sudo scrapy crawl StPeters"],shell = True)
	#time.sleep(100)
        

	filez = "/home/pi/business/competition rates %s.csv" %(datetime.datetime.now().strftime("%m-%d-%y"))

	part = MIMEBase('application', "octet-stream")
	part.set_payload(open(filez, "rb").read())


	msg = MIMEMultipart()
	msg['From'] = "djgraff1@cougars.ccis.edu"
	msg['To'] = "dylanbob86@gmail.com" #astorageinnlemay@gmail.com"
	msg['Date'] = formatdate(localtime = True)
	msg['Subject'] = "Competition Report"
	msg.attach(MIMEText("Cave Springs"))




	content = 'example email stuff here'

	mail = smtplib.SMTP('smtp.gmail.com',587)

	mail.ehlo()

	mail.starttls()

	mail.login('djgraff1@cougars.ccis.edu','2ZNf+Uy}')

	encoders.encode_base64(part)
	part.add_header('Content-Disposition', 'attachment; filename="data on Cave Springs %s.csv"'%(datetime.datetime.now().strftime("%m-%d-%y")))
	msg.attach(part)

       

        print 'email sent'
        mail.sendmail('djgraff1@cougars.ccis.edu','dylanbob86@gmail.com',msg.as_string())


def sleep():
    time.sleep(4000)


def monitor():
   
    while True:
	weekday = datetime.datetime.today().weekday()
        curr_time = datetime.datetime.now().time()
        curr_hour = curr_time.hour
	print curr_hour
	time.sleep(3)
        if weekday == 0 or weekday == 2 or weekday == 4:
		if curr_hour == 19:
			sendmail()
			sleep()
def main():


	
	monitor()

if __name__ == '__main__':
    main()

